package Yal2Jvm;

/* Generated By:JJTree: Do not edit this line. Yal2Jvm.ASTArrayAccess.java Version 4.3 */
 /* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */

/**
 * ArrayAccess expression generated by JJTree.
 * This node stores the name on an array being accessed.
 * ASTArrayAccess only needs to override the dump method, all other methods are inherited by the SimpleNode class.
 */
public class ASTArrayAccess extends SimpleNode
{
    /**
     * The id of the array.
     */
    public String arrayID;
	/**
	 * Constructor of the non-terminal expression 'ArrayAccess'.
	 * @param id ID of the node.
	 */
    public ASTArrayAccess(int id)
    {
        super(id);
    }
	/**
	 * Constructor of the non-terminal expression 'ArrayAccess'.
	 * @param p Scanner object.
	 * @param id ID of the node.
	 */
    public ASTArrayAccess(Scanner p, int id)
    {
        super(p, id);
    }

    /**
     * Displays information about this node. Correctly formats the information for more user-friendly reading on the console.
     * The method is overridden in the derived classes whenever special behaviour is necessary.
     * @param prefix The prefix (one or more spaces) to correctly format the information.
     */
    public void dump(String prefix)
    {
        System.out.println(toString(prefix));
        System.out.println(prefix + "Array ID:" + arrayID);
        if (children != null)
        {
            for (int i = 0; i < children.length; ++i)
            {
                SimpleNode n = (SimpleNode) children[i];
                if (n != null)
                {
                    n.dump(prefix + " ");
                }
            }
        }
    }

}
/*
 * JavaCC - OriginalChecksum=47ce49ba7a07615e2ce3e1062cfc06b9 (do not edit this
 * line)
 */
