package Yal2Jvm;

/* Generated By:JJTree: Do not edit this line. Yal2Jvm.ASTArgument.java Version 4.3 */
 /* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
/**
 * Argument expression generated by JJTree.
 * This class holds the fields id, str and integer. If the argument is integer then the integer field will contain that value and the two other fields will remain null. Similar happens in the two other cases where the argument is a string or a variable.
 * ASTArgument only needs to override the dump method, all other methods are inherited by the SimpleNode class.  
 */
public class ASTArgument extends SimpleNode
{
    /**
     * If the argument of the function is a variable, its id will be recorded by this variable. Otherwise it will be null.
     */
    public String id = null;
    /**
     * If the argument of the function is a string, this variable will be different than null.
     */
    public String str = null;
    /**
     * If the argument of the function is a literal, this variable will be different than null.
     */
    public Integer integer = null;

    /**
     * Constructor of the non-terminal expression 'Argument'.
     * @param id ID of the node.
     */
    public ASTArgument(int id)
    {
        super(id);
    }
	/**
	 * Constructor of the non-terminal expression 'Argument'.
	 * @param p Scanner object.
	 * @param id ID of the node.
	 */
    public ASTArgument(Scanner p, int id)
    {
        super(p, id);
    }

    /**
     * Displays information about this node. Correctly formats the information for more user-friendly reading on the console.
     * The method is overridden in the derived classes whenever special behaviour is necessary.
     * @param prefix The prefix (one or more spaces) to correctly format the information.
     */
    public void dump(String prefix)
    {
        System.out.println(toString(prefix));
        if (id != null)
        {
            System.out.println(prefix + " ID:" + id);
        }
        if (str != null)
        {
            System.out.println(prefix + " String:" + str);
        }
        if (integer != null)
        {
            System.out.println(prefix + " Integer:" + integer);
        }
    }

}
/*
 * JavaCC - OriginalChecksum=d7d80d11fe0fb78be64f84201ab84763 (do not edit this
 * line)
 */
